// MongoDB Playground
// Use Ctrl+Space inside a snippet or a string literal to trigger completions.

const database = 'db2';

// The current database to use.
use(database);

// Query example 2
db.npotcms.aggregate([  
  { // Stage 1
    $match: {
      npotsts: { $in: [ "V", "T" ] }
    }
  },
  { // Stage 2 - multiple fields lookup (from ChatGPT)
    $lookup: {
      from: "npotcms",
      let: {
        npotnum: "$npotnum",
        npotseq1: "$npotseq1",
        empnum: "$empnum",
      },
      pipeline: [
        {
          $match: {
            $expr: {
              $and: [
                { $eq: ["$npotnum", "$$npotnum"] },
                { $eq: ["$npotseq1", "$$npotseq1"] },
                { $eq: ["$empnum", "$$empnum"] }
              ]
            }
          }
        }
      ],
      as: "npotcdt"
    }
  },
  { // Stage 3
    $unwind: "$npotcdt"
  },
  { // Stage 4 
    $addFields: {
      year: { $floor: { $divide: [ "$npotcdt.npotwdt" , 10000] } }, 
      yearMonth: { $floor: { $divide: [ "$npotcdt.npotwdt" , 100] } }
    }
  },
  { // Stage 5
    $match: {
      year: 2019,
      "npotcdt.npotsts": "A"
    }
  }, 
  { // Stage 6
    $group: {
      _id: {
        yearMonth: "$yearMonth", 
        ogtabv: "$ogtabv"
      },
      dayhour: {
        $sum: "$npotcdt.npodayhr"
      }, 
      dayamount: {
        $sum: "$npotcdt.npodayam"
      },
      nighthour: {
        $sum: "$npotcdt.nponighr"
      }, 
      nightamount: {
        $sum: "$npotcdt.nponigam"
      }      
    }
  },
  { // Stage 7
    $sort: {
      "_id.yearMonth": 1,
      "_id.ogtabv": 1 
    }
  }
]);

// The prototype form to create a collection:
/* db.createCollection( <name>,
  {
    capped: <boolean>,
    autoIndexId: <boolean>,
    size: <number>,
    max: <number>,
    storageEngine: <document>,
    validator: <document>,
    validationLevel: <string>,
    validationAction: <string>,
    indexOptionDefaults: <document>,
    viewOn: <string>,
    pipeline: <pipeline>,
    collation: <document>,
    writeConcern: <document>,
    timeseries: { // Added in MongoDB 5.0
      timeField: <string>, // required for time series collections
      metaField: <string>,
      granularity: <string>
    },
    expireAfterSeconds: <number>,
    clusteredIndex: <document>, // Added in MongoDB 5.3
  }
)*/

// More information on the `createCollection` command can be found at:
// https://www.mongodb.com/docs/manual/reference/method/db.createCollection/
